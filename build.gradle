import org.gradle.internal.service.ServiceRegistry
import org.gradle.nativeplatform.toolchain.internal.msvcpp.WindowsSdkLocator

apply plugin: "cpp"

apply from: '../../gradle/version.gradle'
apply from: '../../gradle/environments.gradle'
apply from: '../../gradle/binaries.gradle'

goBinData 'github.com/stackfoundation/core',
        'pkg/minikube/assets/assets.go',
        ['./out/localkube', './out/docker-machine-driver-xhyve', './out/cli.zip', 'deploy/addons/...'],
        'assets'

goBinary 'Core',
        ['windows-386', 'windows-amd64', 'darwin-amd64', 'linux-amd64'],
        false,
        true,
        [],
        'github.com/stackfoundation/core'

goBinary 'Bootstrap',
        ['windows-386', 'darwin-386', 'linux-386', 'linux-amd64'],
        true,
        false,
        ["github.com/stackfoundation/bootstrap/install.binariesBucket=${defaultEnvironment.binariesBucketUrl}",
         "github.com/stackfoundation/bootstrap/install.cliVersion=${cliVersion}"],
        'github.com/stackfoundation/bootstrap'

class SignToolTask extends RuleSource {
    @Mutate
    void createVersionFileTask(final ModelMap<Task> tasks, ServiceRegistry serviceRegistry) {
        File toolLocation = null

        WindowsSdkLocator locator = serviceRegistry.get(WindowsSdkLocator.class)
        File[] files = locator.locateWindowsSdks(null).getSdk().getIncludeDirs()
        for (File file : files) {
            file = file.getParentFile()
            while (file != null && !file.getName().contains("Include")) {
                file = file.getParentFile()
            }

            if (file != null) {
                file = file.getParentFile()
            }

            file = new File(file, "bin/x64/signtool.exe")
            if (file.isFile()) {
                toolLocation = file
                break
            }
        }

        tasks.create("signBinary") {
            doLast {
                if (toolLocation != null) {
                    System.out.println(toolLocation)
                }
            }
        }
    }
}

apply plugin: SignToolTask

